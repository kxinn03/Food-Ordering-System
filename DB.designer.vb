'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="DB")>  _
Partial Public Class DBDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertMenu(instance As Menu)
    End Sub
  Partial Private Sub UpdateMenu(instance As Menu)
    End Sub
  Partial Private Sub DeleteMenu(instance As Menu)
    End Sub
  Partial Private Sub InsertStaff(instance As Staff)
    End Sub
  Partial Private Sub UpdateStaff(instance As Staff)
    End Sub
  Partial Private Sub DeleteStaff(instance As Staff)
    End Sub
  Partial Private Sub InsertRedeem(instance As Redeem)
    End Sub
  Partial Private Sub UpdateRedeem(instance As Redeem)
    End Sub
  Partial Private Sub DeleteRedeem(instance As Redeem)
    End Sub
  Partial Private Sub InsertpayedFood(instance As payedFood)
    End Sub
  Partial Private Sub UpdatepayedFood(instance As payedFood)
    End Sub
  Partial Private Sub DeletepayedFood(instance As payedFood)
    End Sub
  Partial Private Sub InsertPayment(instance As Payment)
    End Sub
  Partial Private Sub UpdatePayment(instance As Payment)
    End Sub
  Partial Private Sub DeletePayment(instance As Payment)
    End Sub
  Partial Private Sub InsertMember(instance As Member)
    End Sub
  Partial Private Sub UpdateMember(instance As Member)
    End Sub
  Partial Private Sub DeleteMember(instance As Member)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.FoodOrderingSystem.My.MySettings.Default.DBConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property Menus() As System.Data.Linq.Table(Of Menu)
		Get
			Return Me.GetTable(Of Menu)
		End Get
	End Property
	
	Public ReadOnly Property Staffs() As System.Data.Linq.Table(Of Staff)
		Get
			Return Me.GetTable(Of Staff)
		End Get
	End Property
	
	Public ReadOnly Property Redeems() As System.Data.Linq.Table(Of Redeem)
		Get
			Return Me.GetTable(Of Redeem)
		End Get
	End Property
	
	Public ReadOnly Property payedFoods() As System.Data.Linq.Table(Of payedFood)
		Get
			Return Me.GetTable(Of payedFood)
		End Get
	End Property
	
	Public ReadOnly Property Payments() As System.Data.Linq.Table(Of Payment)
		Get
			Return Me.GetTable(Of Payment)
		End Get
	End Property
	
	Public ReadOnly Property Members() As System.Data.Linq.Table(Of Member)
		Get
			Return Me.GetTable(Of Member)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Menu")>  _
Partial Public Class Menu
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id As String
	
	Private _Name As String
	
	Private _Description As String
	
	Private _Price As System.Nullable(Of Decimal)
	
	Private _Category As String
	
	Private _Group As String
	
	Private _Food_Image As System.Data.Linq.Binary
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As String)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnNameChanging(value As String)
    End Sub
    Partial Private Sub OnNameChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    Partial Private Sub OnPriceChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnPriceChanged()
    End Sub
    Partial Private Sub OnCategoryChanging(value As String)
    End Sub
    Partial Private Sub OnCategoryChanged()
    End Sub
    Partial Private Sub OnGroupChanging(value As String)
    End Sub
    Partial Private Sub OnGroupChanged()
    End Sub
    Partial Private Sub OnFood_ImageChanging(value As System.Data.Linq.Binary)
    End Sub
    Partial Private Sub OnFood_ImageChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", DbType:="VarChar(5) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Id() As String
		Get
			Return Me._Id
		End Get
		Set
			If (String.Equals(Me._Id, value) = false) Then
				Me.OnIdChanging(value)
				Me.SendPropertyChanging
				Me._Id = value
				Me.SendPropertyChanged("Id")
				Me.OnIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="VarChar(25)")>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me.OnNameChanging(value)
				Me.SendPropertyChanging
				Me._Name = value
				Me.SendPropertyChanged("Name")
				Me.OnNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="VarChar(90)")>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me.OnDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._Description = value
				Me.SendPropertyChanged("Description")
				Me.OnDescriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Price", DbType:="Decimal(18,0)")>  _
	Public Property Price() As System.Nullable(Of Decimal)
		Get
			Return Me._Price
		End Get
		Set
			If (Me._Price.Equals(value) = false) Then
				Me.OnPriceChanging(value)
				Me.SendPropertyChanging
				Me._Price = value
				Me.SendPropertyChanged("Price")
				Me.OnPriceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Category", DbType:="VarChar(20)")>  _
	Public Property Category() As String
		Get
			Return Me._Category
		End Get
		Set
			If (String.Equals(Me._Category, value) = false) Then
				Me.OnCategoryChanging(value)
				Me.SendPropertyChanging
				Me._Category = value
				Me.SendPropertyChanged("Category")
				Me.OnCategoryChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Group", DbType:="VarChar(15)")>  _
	Public Property [Group]() As String
		Get
			Return Me._Group
		End Get
		Set
			If (String.Equals(Me._Group, value) = false) Then
				Me.OnGroupChanging(value)
				Me.SendPropertyChanging
				Me._Group = value
				Me.SendPropertyChanged("[Group]")
				Me.OnGroupChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Food Image]", Storage:="_Food_Image", DbType:="Image", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Food_Image() As System.Data.Linq.Binary
		Get
			Return Me._Food_Image
		End Get
		Set
			If (Object.Equals(Me._Food_Image, value) = false) Then
				Me.OnFood_ImageChanging(value)
				Me.SendPropertyChanging
				Me._Food_Image = value
				Me.SendPropertyChanged("Food_Image")
				Me.OnFood_ImageChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Staff")>  _
Partial Public Class Staff
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _StaffID As String
	
	Private _Password As String
	
	Private _StaffFirstName As String
	
	Private _StaffMiddleName As String
	
	Private _StaffLastName As String
	
	Private _Address As String
	
	Private _PostalCode As String
	
	Private _CIty As String
	
	Private _Gender As String
	
	Private _Birthday As String
	
	Private _PlaceOfBirth As String
	
	Private _PhoneNum As String
	
	Private _ICNum As String
	
	Private _Age As String
	
	Private _Status As String
	
	Private _Email As String
	
	Private _PhoneNumEmergency As String
	
	Private _JobPosition As String
	
	Private _DateHired As String
	
	Private _DailyRate As String
	
	Private _JobTitle As String
	
	Private _JobType As String
	
	Private _PayMethod As String
	
	Private _JobStatus As String
	
	Private _StaffImage As System.Data.Linq.Binary
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnStaffIDChanging(value As String)
    End Sub
    Partial Private Sub OnStaffIDChanged()
    End Sub
    Partial Private Sub OnPasswordChanging(value As String)
    End Sub
    Partial Private Sub OnPasswordChanged()
    End Sub
    Partial Private Sub OnStaffFirstNameChanging(value As String)
    End Sub
    Partial Private Sub OnStaffFirstNameChanged()
    End Sub
    Partial Private Sub OnStaffMiddleNameChanging(value As String)
    End Sub
    Partial Private Sub OnStaffMiddleNameChanged()
    End Sub
    Partial Private Sub OnStaffLastNameChanging(value As String)
    End Sub
    Partial Private Sub OnStaffLastNameChanged()
    End Sub
    Partial Private Sub OnAddressChanging(value As String)
    End Sub
    Partial Private Sub OnAddressChanged()
    End Sub
    Partial Private Sub OnPostalCodeChanging(value As String)
    End Sub
    Partial Private Sub OnPostalCodeChanged()
    End Sub
    Partial Private Sub OnCItyChanging(value As String)
    End Sub
    Partial Private Sub OnCItyChanged()
    End Sub
    Partial Private Sub OnGenderChanging(value As String)
    End Sub
    Partial Private Sub OnGenderChanged()
    End Sub
    Partial Private Sub OnBirthdayChanging(value As String)
    End Sub
    Partial Private Sub OnBirthdayChanged()
    End Sub
    Partial Private Sub OnPlaceOfBirthChanging(value As String)
    End Sub
    Partial Private Sub OnPlaceOfBirthChanged()
    End Sub
    Partial Private Sub OnPhoneNumChanging(value As String)
    End Sub
    Partial Private Sub OnPhoneNumChanged()
    End Sub
    Partial Private Sub OnICNumChanging(value As String)
    End Sub
    Partial Private Sub OnICNumChanged()
    End Sub
    Partial Private Sub OnAgeChanging(value As String)
    End Sub
    Partial Private Sub OnAgeChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As String)
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    Partial Private Sub OnEmailChanging(value As String)
    End Sub
    Partial Private Sub OnEmailChanged()
    End Sub
    Partial Private Sub OnPhoneNumEmergencyChanging(value As String)
    End Sub
    Partial Private Sub OnPhoneNumEmergencyChanged()
    End Sub
    Partial Private Sub OnJobPositionChanging(value As String)
    End Sub
    Partial Private Sub OnJobPositionChanged()
    End Sub
    Partial Private Sub OnDateHiredChanging(value As String)
    End Sub
    Partial Private Sub OnDateHiredChanged()
    End Sub
    Partial Private Sub OnDailyRateChanging(value As String)
    End Sub
    Partial Private Sub OnDailyRateChanged()
    End Sub
    Partial Private Sub OnJobTitleChanging(value As String)
    End Sub
    Partial Private Sub OnJobTitleChanged()
    End Sub
    Partial Private Sub OnJobTypeChanging(value As String)
    End Sub
    Partial Private Sub OnJobTypeChanged()
    End Sub
    Partial Private Sub OnPayMethodChanging(value As String)
    End Sub
    Partial Private Sub OnPayMethodChanged()
    End Sub
    Partial Private Sub OnJobStatusChanging(value As String)
    End Sub
    Partial Private Sub OnJobStatusChanged()
    End Sub
    Partial Private Sub OnStaffImageChanging(value As System.Data.Linq.Binary)
    End Sub
    Partial Private Sub OnStaffImageChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StaffID", DbType:="NVarChar(5) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property StaffID() As String
		Get
			Return Me._StaffID
		End Get
		Set
			If (String.Equals(Me._StaffID, value) = false) Then
				Me.OnStaffIDChanging(value)
				Me.SendPropertyChanging
				Me._StaffID = value
				Me.SendPropertyChanged("StaffID")
				Me.OnStaffIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Password", DbType:="NVarChar(20)")>  _
	Public Property Password() As String
		Get
			Return Me._Password
		End Get
		Set
			If (String.Equals(Me._Password, value) = false) Then
				Me.OnPasswordChanging(value)
				Me.SendPropertyChanging
				Me._Password = value
				Me.SendPropertyChanged("Password")
				Me.OnPasswordChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StaffFirstName", DbType:="NVarChar(20)")>  _
	Public Property StaffFirstName() As String
		Get
			Return Me._StaffFirstName
		End Get
		Set
			If (String.Equals(Me._StaffFirstName, value) = false) Then
				Me.OnStaffFirstNameChanging(value)
				Me.SendPropertyChanging
				Me._StaffFirstName = value
				Me.SendPropertyChanged("StaffFirstName")
				Me.OnStaffFirstNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StaffMiddleName", DbType:="NVarChar(20)")>  _
	Public Property StaffMiddleName() As String
		Get
			Return Me._StaffMiddleName
		End Get
		Set
			If (String.Equals(Me._StaffMiddleName, value) = false) Then
				Me.OnStaffMiddleNameChanging(value)
				Me.SendPropertyChanging
				Me._StaffMiddleName = value
				Me.SendPropertyChanged("StaffMiddleName")
				Me.OnStaffMiddleNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StaffLastName", DbType:="NVarChar(20)")>  _
	Public Property StaffLastName() As String
		Get
			Return Me._StaffLastName
		End Get
		Set
			If (String.Equals(Me._StaffLastName, value) = false) Then
				Me.OnStaffLastNameChanging(value)
				Me.SendPropertyChanging
				Me._StaffLastName = value
				Me.SendPropertyChanged("StaffLastName")
				Me.OnStaffLastNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address", DbType:="NVarChar(50)")>  _
	Public Property Address() As String
		Get
			Return Me._Address
		End Get
		Set
			If (String.Equals(Me._Address, value) = false) Then
				Me.OnAddressChanging(value)
				Me.SendPropertyChanging
				Me._Address = value
				Me.SendPropertyChanged("Address")
				Me.OnAddressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PostalCode", DbType:="NVarChar(5)")>  _
	Public Property PostalCode() As String
		Get
			Return Me._PostalCode
		End Get
		Set
			If (String.Equals(Me._PostalCode, value) = false) Then
				Me.OnPostalCodeChanging(value)
				Me.SendPropertyChanging
				Me._PostalCode = value
				Me.SendPropertyChanged("PostalCode")
				Me.OnPostalCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CIty", DbType:="NVarChar(20)")>  _
	Public Property CIty() As String
		Get
			Return Me._CIty
		End Get
		Set
			If (String.Equals(Me._CIty, value) = false) Then
				Me.OnCItyChanging(value)
				Me.SendPropertyChanging
				Me._CIty = value
				Me.SendPropertyChanged("CIty")
				Me.OnCItyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Gender", DbType:="NVarChar(6)")>  _
	Public Property Gender() As String
		Get
			Return Me._Gender
		End Get
		Set
			If (String.Equals(Me._Gender, value) = false) Then
				Me.OnGenderChanging(value)
				Me.SendPropertyChanging
				Me._Gender = value
				Me.SendPropertyChanged("Gender")
				Me.OnGenderChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Birthday", DbType:="NVarChar(20)")>  _
	Public Property Birthday() As String
		Get
			Return Me._Birthday
		End Get
		Set
			If (String.Equals(Me._Birthday, value) = false) Then
				Me.OnBirthdayChanging(value)
				Me.SendPropertyChanging
				Me._Birthday = value
				Me.SendPropertyChanged("Birthday")
				Me.OnBirthdayChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PlaceOfBirth", DbType:="NVarChar(50)")>  _
	Public Property PlaceOfBirth() As String
		Get
			Return Me._PlaceOfBirth
		End Get
		Set
			If (String.Equals(Me._PlaceOfBirth, value) = false) Then
				Me.OnPlaceOfBirthChanging(value)
				Me.SendPropertyChanging
				Me._PlaceOfBirth = value
				Me.SendPropertyChanged("PlaceOfBirth")
				Me.OnPlaceOfBirthChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PhoneNum", DbType:="NVarChar(50)")>  _
	Public Property PhoneNum() As String
		Get
			Return Me._PhoneNum
		End Get
		Set
			If (String.Equals(Me._PhoneNum, value) = false) Then
				Me.OnPhoneNumChanging(value)
				Me.SendPropertyChanging
				Me._PhoneNum = value
				Me.SendPropertyChanged("PhoneNum")
				Me.OnPhoneNumChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ICNum", DbType:="NVarChar(50)")>  _
	Public Property ICNum() As String
		Get
			Return Me._ICNum
		End Get
		Set
			If (String.Equals(Me._ICNum, value) = false) Then
				Me.OnICNumChanging(value)
				Me.SendPropertyChanging
				Me._ICNum = value
				Me.SendPropertyChanged("ICNum")
				Me.OnICNumChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Age", DbType:="NVarChar(3)")>  _
	Public Property Age() As String
		Get
			Return Me._Age
		End Get
		Set
			If (String.Equals(Me._Age, value) = false) Then
				Me.OnAgeChanging(value)
				Me.SendPropertyChanging
				Me._Age = value
				Me.SendPropertyChanged("Age")
				Me.OnAgeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="NVarChar(20)")>  _
	Public Property Status() As String
		Get
			Return Me._Status
		End Get
		Set
			If (String.Equals(Me._Status, value) = false) Then
				Me.OnStatusChanging(value)
				Me.SendPropertyChanging
				Me._Status = value
				Me.SendPropertyChanged("Status")
				Me.OnStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="NVarChar(50)")>  _
	Public Property Email() As String
		Get
			Return Me._Email
		End Get
		Set
			If (String.Equals(Me._Email, value) = false) Then
				Me.OnEmailChanging(value)
				Me.SendPropertyChanging
				Me._Email = value
				Me.SendPropertyChanged("Email")
				Me.OnEmailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PhoneNumEmergency", DbType:="NVarChar(50)")>  _
	Public Property PhoneNumEmergency() As String
		Get
			Return Me._PhoneNumEmergency
		End Get
		Set
			If (String.Equals(Me._PhoneNumEmergency, value) = false) Then
				Me.OnPhoneNumEmergencyChanging(value)
				Me.SendPropertyChanging
				Me._PhoneNumEmergency = value
				Me.SendPropertyChanged("PhoneNumEmergency")
				Me.OnPhoneNumEmergencyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_JobPosition", DbType:="NVarChar(50)")>  _
	Public Property JobPosition() As String
		Get
			Return Me._JobPosition
		End Get
		Set
			If (String.Equals(Me._JobPosition, value) = false) Then
				Me.OnJobPositionChanging(value)
				Me.SendPropertyChanging
				Me._JobPosition = value
				Me.SendPropertyChanged("JobPosition")
				Me.OnJobPositionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateHired", DbType:="NVarChar(50)")>  _
	Public Property DateHired() As String
		Get
			Return Me._DateHired
		End Get
		Set
			If (String.Equals(Me._DateHired, value) = false) Then
				Me.OnDateHiredChanging(value)
				Me.SendPropertyChanging
				Me._DateHired = value
				Me.SendPropertyChanged("DateHired")
				Me.OnDateHiredChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DailyRate", DbType:="NVarChar(50)")>  _
	Public Property DailyRate() As String
		Get
			Return Me._DailyRate
		End Get
		Set
			If (String.Equals(Me._DailyRate, value) = false) Then
				Me.OnDailyRateChanging(value)
				Me.SendPropertyChanging
				Me._DailyRate = value
				Me.SendPropertyChanged("DailyRate")
				Me.OnDailyRateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_JobTitle", DbType:="NVarChar(50)")>  _
	Public Property JobTitle() As String
		Get
			Return Me._JobTitle
		End Get
		Set
			If (String.Equals(Me._JobTitle, value) = false) Then
				Me.OnJobTitleChanging(value)
				Me.SendPropertyChanging
				Me._JobTitle = value
				Me.SendPropertyChanged("JobTitle")
				Me.OnJobTitleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_JobType", DbType:="NVarChar(50)")>  _
	Public Property JobType() As String
		Get
			Return Me._JobType
		End Get
		Set
			If (String.Equals(Me._JobType, value) = false) Then
				Me.OnJobTypeChanging(value)
				Me.SendPropertyChanging
				Me._JobType = value
				Me.SendPropertyChanged("JobType")
				Me.OnJobTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PayMethod", DbType:="NVarChar(50)")>  _
	Public Property PayMethod() As String
		Get
			Return Me._PayMethod
		End Get
		Set
			If (String.Equals(Me._PayMethod, value) = false) Then
				Me.OnPayMethodChanging(value)
				Me.SendPropertyChanging
				Me._PayMethod = value
				Me.SendPropertyChanged("PayMethod")
				Me.OnPayMethodChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_JobStatus", DbType:="NChar(10)")>  _
	Public Property JobStatus() As String
		Get
			Return Me._JobStatus
		End Get
		Set
			If (String.Equals(Me._JobStatus, value) = false) Then
				Me.OnJobStatusChanging(value)
				Me.SendPropertyChanging
				Me._JobStatus = value
				Me.SendPropertyChanged("JobStatus")
				Me.OnJobStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StaffImage", DbType:="Image", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property StaffImage() As System.Data.Linq.Binary
		Get
			Return Me._StaffImage
		End Get
		Set
			If (Object.Equals(Me._StaffImage, value) = false) Then
				Me.OnStaffImageChanging(value)
				Me.SendPropertyChanging
				Me._StaffImage = value
				Me.SendPropertyChanged("StaffImage")
				Me.OnStaffImageChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Redeem")>  _
Partial Public Class Redeem
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ProductId As String
	
	Private _Name As String
	
	Private _Details As String
	
	Private _Points As Integer
	
	Private _Quantity As Integer
	
	Private _Availability As String
	
	Private _Picture As System.Data.Linq.Binary
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnProductIdChanging(value As String)
    End Sub
    Partial Private Sub OnProductIdChanged()
    End Sub
    Partial Private Sub OnNameChanging(value As String)
    End Sub
    Partial Private Sub OnNameChanged()
    End Sub
    Partial Private Sub OnDetailsChanging(value As String)
    End Sub
    Partial Private Sub OnDetailsChanged()
    End Sub
    Partial Private Sub OnPointsChanging(value As Integer)
    End Sub
    Partial Private Sub OnPointsChanged()
    End Sub
    Partial Private Sub OnQuantityChanging(value As Integer)
    End Sub
    Partial Private Sub OnQuantityChanged()
    End Sub
    Partial Private Sub OnAvailabilityChanging(value As String)
    End Sub
    Partial Private Sub OnAvailabilityChanged()
    End Sub
    Partial Private Sub OnPictureChanging(value As System.Data.Linq.Binary)
    End Sub
    Partial Private Sub OnPictureChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductId", DbType:="VarChar(5) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property ProductId() As String
		Get
			Return Me._ProductId
		End Get
		Set
			If (String.Equals(Me._ProductId, value) = false) Then
				Me.OnProductIdChanging(value)
				Me.SendPropertyChanging
				Me._ProductId = value
				Me.SendPropertyChanged("ProductId")
				Me.OnProductIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me.OnNameChanging(value)
				Me.SendPropertyChanging
				Me._Name = value
				Me.SendPropertyChanged("Name")
				Me.OnNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Details", DbType:="VarChar(MAX)")>  _
	Public Property Details() As String
		Get
			Return Me._Details
		End Get
		Set
			If (String.Equals(Me._Details, value) = false) Then
				Me.OnDetailsChanging(value)
				Me.SendPropertyChanging
				Me._Details = value
				Me.SendPropertyChanged("Details")
				Me.OnDetailsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Points", DbType:="Int NOT NULL")>  _
	Public Property Points() As Integer
		Get
			Return Me._Points
		End Get
		Set
			If ((Me._Points = value)  _
						= false) Then
				Me.OnPointsChanging(value)
				Me.SendPropertyChanging
				Me._Points = value
				Me.SendPropertyChanged("Points")
				Me.OnPointsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Quantity", DbType:="Int NOT NULL")>  _
	Public Property Quantity() As Integer
		Get
			Return Me._Quantity
		End Get
		Set
			If ((Me._Quantity = value)  _
						= false) Then
				Me.OnQuantityChanging(value)
				Me.SendPropertyChanging
				Me._Quantity = value
				Me.SendPropertyChanged("Quantity")
				Me.OnQuantityChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Availability", DbType:="VarChar(50)")>  _
	Public Property Availability() As String
		Get
			Return Me._Availability
		End Get
		Set
			If (String.Equals(Me._Availability, value) = false) Then
				Me.OnAvailabilityChanging(value)
				Me.SendPropertyChanging
				Me._Availability = value
				Me.SendPropertyChanged("Availability")
				Me.OnAvailabilityChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Picture", DbType:="VarBinary(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Picture() As System.Data.Linq.Binary
		Get
			Return Me._Picture
		End Get
		Set
			If (Object.Equals(Me._Picture, value) = false) Then
				Me.OnPictureChanging(value)
				Me.SendPropertyChanging
				Me._Picture = value
				Me.SendPropertyChanged("Picture")
				Me.OnPictureChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.payedFood")>  _
Partial Public Class payedFood
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _payedFood_ID As String
	
	Private _payment_ID As String
	
	Private _food_name As String
	
	Private _food_quantity As Integer
	
	Private _food_totalPrice As Decimal
	
	Private _pay_date As Date
	
	Private _pay_time As System.TimeSpan
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnpayedFood_IDChanging(value As String)
    End Sub
    Partial Private Sub OnpayedFood_IDChanged()
    End Sub
    Partial Private Sub Onpayment_IDChanging(value As String)
    End Sub
    Partial Private Sub Onpayment_IDChanged()
    End Sub
    Partial Private Sub Onfood_nameChanging(value As String)
    End Sub
    Partial Private Sub Onfood_nameChanged()
    End Sub
    Partial Private Sub Onfood_quantityChanging(value As Integer)
    End Sub
    Partial Private Sub Onfood_quantityChanged()
    End Sub
    Partial Private Sub Onfood_totalPriceChanging(value As Decimal)
    End Sub
    Partial Private Sub Onfood_totalPriceChanged()
    End Sub
    Partial Private Sub Onpay_dateChanging(value As Date)
    End Sub
    Partial Private Sub Onpay_dateChanged()
    End Sub
    Partial Private Sub Onpay_timeChanging(value As System.TimeSpan)
    End Sub
    Partial Private Sub Onpay_timeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_payedFood_ID", DbType:="VarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property payedFood_ID() As String
		Get
			Return Me._payedFood_ID
		End Get
		Set
			If (String.Equals(Me._payedFood_ID, value) = false) Then
				Me.OnpayedFood_IDChanging(value)
				Me.SendPropertyChanging
				Me._payedFood_ID = value
				Me.SendPropertyChanged("payedFood_ID")
				Me.OnpayedFood_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_payment_ID", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property payment_ID() As String
		Get
			Return Me._payment_ID
		End Get
		Set
			If (String.Equals(Me._payment_ID, value) = false) Then
				Me.Onpayment_IDChanging(value)
				Me.SendPropertyChanging
				Me._payment_ID = value
				Me.SendPropertyChanged("payment_ID")
				Me.Onpayment_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_food_name", DbType:="VarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property food_name() As String
		Get
			Return Me._food_name
		End Get
		Set
			If (String.Equals(Me._food_name, value) = false) Then
				Me.Onfood_nameChanging(value)
				Me.SendPropertyChanging
				Me._food_name = value
				Me.SendPropertyChanged("food_name")
				Me.Onfood_nameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_food_quantity", DbType:="Int NOT NULL")>  _
	Public Property food_quantity() As Integer
		Get
			Return Me._food_quantity
		End Get
		Set
			If ((Me._food_quantity = value)  _
						= false) Then
				Me.Onfood_quantityChanging(value)
				Me.SendPropertyChanging
				Me._food_quantity = value
				Me.SendPropertyChanged("food_quantity")
				Me.Onfood_quantityChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_food_totalPrice", DbType:="Decimal(18,2) NOT NULL")>  _
	Public Property food_totalPrice() As Decimal
		Get
			Return Me._food_totalPrice
		End Get
		Set
			If ((Me._food_totalPrice = value)  _
						= false) Then
				Me.Onfood_totalPriceChanging(value)
				Me.SendPropertyChanging
				Me._food_totalPrice = value
				Me.SendPropertyChanged("food_totalPrice")
				Me.Onfood_totalPriceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pay_date", DbType:="Date NOT NULL")>  _
	Public Property pay_date() As Date
		Get
			Return Me._pay_date
		End Get
		Set
			If ((Me._pay_date = value)  _
						= false) Then
				Me.Onpay_dateChanging(value)
				Me.SendPropertyChanging
				Me._pay_date = value
				Me.SendPropertyChanged("pay_date")
				Me.Onpay_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pay_time", DbType:="Time NOT NULL")>  _
	Public Property pay_time() As System.TimeSpan
		Get
			Return Me._pay_time
		End Get
		Set
			If ((Me._pay_time = value)  _
						= false) Then
				Me.Onpay_timeChanging(value)
				Me.SendPropertyChanging
				Me._pay_time = value
				Me.SendPropertyChanged("pay_time")
				Me.Onpay_timeChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Payment")>  _
Partial Public Class Payment
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _payment_ID As String
	
	Private _payment_method As String
	
	Private _payment_totalPrice As Decimal
	
	Private _member_id As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onpayment_IDChanging(value As String)
    End Sub
    Partial Private Sub Onpayment_IDChanged()
    End Sub
    Partial Private Sub Onpayment_methodChanging(value As String)
    End Sub
    Partial Private Sub Onpayment_methodChanged()
    End Sub
    Partial Private Sub Onpayment_totalPriceChanging(value As Decimal)
    End Sub
    Partial Private Sub Onpayment_totalPriceChanged()
    End Sub
    Partial Private Sub Onmember_idChanging(value As String)
    End Sub
    Partial Private Sub Onmember_idChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_payment_ID", DbType:="VarChar(100) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property payment_ID() As String
		Get
			Return Me._payment_ID
		End Get
		Set
			If (String.Equals(Me._payment_ID, value) = false) Then
				Me.Onpayment_IDChanging(value)
				Me.SendPropertyChanging
				Me._payment_ID = value
				Me.SendPropertyChanged("payment_ID")
				Me.Onpayment_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_payment_method", DbType:="VarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property payment_method() As String
		Get
			Return Me._payment_method
		End Get
		Set
			If (String.Equals(Me._payment_method, value) = false) Then
				Me.Onpayment_methodChanging(value)
				Me.SendPropertyChanging
				Me._payment_method = value
				Me.SendPropertyChanged("payment_method")
				Me.Onpayment_methodChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_payment_totalPrice", DbType:="Decimal(18,2) NOT NULL")>  _
	Public Property payment_totalPrice() As Decimal
		Get
			Return Me._payment_totalPrice
		End Get
		Set
			If ((Me._payment_totalPrice = value)  _
						= false) Then
				Me.Onpayment_totalPriceChanging(value)
				Me.SendPropertyChanging
				Me._payment_totalPrice = value
				Me.SendPropertyChanged("payment_totalPrice")
				Me.Onpayment_totalPriceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_member_id", DbType:="VarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property member_id() As String
		Get
			Return Me._member_id
		End Get
		Set
			If (String.Equals(Me._member_id, value) = false) Then
				Me.Onmember_idChanging(value)
				Me.SendPropertyChanging
				Me._member_id = value
				Me.SendPropertyChanged("member_id")
				Me.Onmember_idChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Member")>  _
Partial Public Class Member
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id As String
	
	Private _Name As String
	
	Private _Username As String
	
	Private _Password As String
	
	Private _Email As String
	
	Private _PhoneNumber As String
	
	Private _JoinDate As Date
	
	Private _ProfileImage As System.Data.Linq.Binary
	
	Private _Points As System.Nullable(Of Integer)
	
	Private _Gender As String
	
	Private _BirthDate As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As String)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnNameChanging(value As String)
    End Sub
    Partial Private Sub OnNameChanged()
    End Sub
    Partial Private Sub OnUsernameChanging(value As String)
    End Sub
    Partial Private Sub OnUsernameChanged()
    End Sub
    Partial Private Sub OnPasswordChanging(value As String)
    End Sub
    Partial Private Sub OnPasswordChanged()
    End Sub
    Partial Private Sub OnEmailChanging(value As String)
    End Sub
    Partial Private Sub OnEmailChanged()
    End Sub
    Partial Private Sub OnPhoneNumberChanging(value As String)
    End Sub
    Partial Private Sub OnPhoneNumberChanged()
    End Sub
    Partial Private Sub OnJoinDateChanging(value As Date)
    End Sub
    Partial Private Sub OnJoinDateChanged()
    End Sub
    Partial Private Sub OnProfileImageChanging(value As System.Data.Linq.Binary)
    End Sub
    Partial Private Sub OnProfileImageChanged()
    End Sub
    Partial Private Sub OnPointsChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPointsChanged()
    End Sub
    Partial Private Sub OnGenderChanging(value As String)
    End Sub
    Partial Private Sub OnGenderChanged()
    End Sub
    Partial Private Sub OnBirthDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnBirthDateChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", DbType:="VarChar(5) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Id() As String
		Get
			Return Me._Id
		End Get
		Set
			If (String.Equals(Me._Id, value) = false) Then
				Me.OnIdChanging(value)
				Me.SendPropertyChanging
				Me._Id = value
				Me.SendPropertyChanged("Id")
				Me.OnIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="VarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me.OnNameChanging(value)
				Me.SendPropertyChanging
				Me._Name = value
				Me.SendPropertyChanged("Name")
				Me.OnNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Username", DbType:="VarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property Username() As String
		Get
			Return Me._Username
		End Get
		Set
			If (String.Equals(Me._Username, value) = false) Then
				Me.OnUsernameChanging(value)
				Me.SendPropertyChanging
				Me._Username = value
				Me.SendPropertyChanged("Username")
				Me.OnUsernameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Password", DbType:="VarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property Password() As String
		Get
			Return Me._Password
		End Get
		Set
			If (String.Equals(Me._Password, value) = false) Then
				Me.OnPasswordChanging(value)
				Me.SendPropertyChanging
				Me._Password = value
				Me.SendPropertyChanged("Password")
				Me.OnPasswordChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="VarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property Email() As String
		Get
			Return Me._Email
		End Get
		Set
			If (String.Equals(Me._Email, value) = false) Then
				Me.OnEmailChanging(value)
				Me.SendPropertyChanging
				Me._Email = value
				Me.SendPropertyChanged("Email")
				Me.OnEmailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PhoneNumber", DbType:="VarChar(13) NOT NULL", CanBeNull:=false)>  _
	Public Property PhoneNumber() As String
		Get
			Return Me._PhoneNumber
		End Get
		Set
			If (String.Equals(Me._PhoneNumber, value) = false) Then
				Me.OnPhoneNumberChanging(value)
				Me.SendPropertyChanging
				Me._PhoneNumber = value
				Me.SendPropertyChanged("PhoneNumber")
				Me.OnPhoneNumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_JoinDate", DbType:="Date NOT NULL")>  _
	Public Property JoinDate() As Date
		Get
			Return Me._JoinDate
		End Get
		Set
			If ((Me._JoinDate = value)  _
						= false) Then
				Me.OnJoinDateChanging(value)
				Me.SendPropertyChanging
				Me._JoinDate = value
				Me.SendPropertyChanged("JoinDate")
				Me.OnJoinDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProfileImage", DbType:="VarBinary(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property ProfileImage() As System.Data.Linq.Binary
		Get
			Return Me._ProfileImage
		End Get
		Set
			If (Object.Equals(Me._ProfileImage, value) = false) Then
				Me.OnProfileImageChanging(value)
				Me.SendPropertyChanging
				Me._ProfileImage = value
				Me.SendPropertyChanged("ProfileImage")
				Me.OnProfileImageChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Points", DbType:="Int")>  _
	Public Property Points() As System.Nullable(Of Integer)
		Get
			Return Me._Points
		End Get
		Set
			If (Me._Points.Equals(value) = false) Then
				Me.OnPointsChanging(value)
				Me.SendPropertyChanging
				Me._Points = value
				Me.SendPropertyChanged("Points")
				Me.OnPointsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Gender", DbType:="VarChar(6)")>  _
	Public Property Gender() As String
		Get
			Return Me._Gender
		End Get
		Set
			If (String.Equals(Me._Gender, value) = false) Then
				Me.OnGenderChanging(value)
				Me.SendPropertyChanging
				Me._Gender = value
				Me.SendPropertyChanged("Gender")
				Me.OnGenderChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BirthDate", DbType:="Date")>  _
	Public Property BirthDate() As System.Nullable(Of Date)
		Get
			Return Me._BirthDate
		End Get
		Set
			If (Me._BirthDate.Equals(value) = false) Then
				Me.OnBirthDateChanging(value)
				Me.SendPropertyChanging
				Me._BirthDate = value
				Me.SendPropertyChanged("BirthDate")
				Me.OnBirthDateChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
